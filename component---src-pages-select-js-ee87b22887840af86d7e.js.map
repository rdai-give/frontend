{"version":3,"sources":["webpack:///./src/components/ProjectEntity/ProjectEntity.js","webpack:///./src/components/constants.js","webpack:///./src/pages/select.js"],"names":["Container","styled","section","ProjectEntity","project","isSelected","onClick","amount","name","description","image","category","twitter","type","PROJECTS","address","URL","StyledButton","button","Select","useState","selectedCards","state","setState","useContext","Context","context","setContext","tribute","userDetails","compoundRate","console","log","cRate","window","localStorage","getItem","daiBalance","buyingPower","Math","round","cardOffering","length","Layout","title","selectedArray","map","includes","key","cardsArray","splice","indexOf","push","buttonText","isPendingTx","a","async","recipients","proportions","forEach","generateNew","tx2","wait","navigate"],"mappings":"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","file":"component---src-pages-select-js-ee87b22887840af86d7e.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport PropTypes from \"prop-types\"\n\nconst Container = styled.section`\n  text-align: center;\n`\n\nconst ProjectEntity = ({ project, isSelected, onClick, amount }) => {\n  const { name, description, image, category, twitter } = project\n  return (\n    <button\n      type=\"button\"\n      onClick={() => {\n        onClick(name)\n      }}\n    >\n      <Container>\n        {isSelected}\n        {name}\n        {description}\n        {image}\n        {category}\n        {twitter}\n        {isSelected && amount}\n      </Container>\n    </button>\n  )\n}\n\nProjectEntity.propTypes = {\n  project: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    twitter: PropTypes.string.isRequired,\n  }).isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  amount: PropTypes.string.isRequired,\n}\n\nexport default ProjectEntity\n","const PROJECTS = [\n  {\n    name: \"EthHub\",\n    description: \"A TRUSTED SOURCE IN A TRUSTLESS WORLD\",\n    image: \"ethhub\",\n    category: \"Education\",\n    address: \"0xA19FCDaD77C1F0fd184689aca88BabCF68010347\",\n    twitter: \"@ethhub_io\",\n    URL: \"https://ethhub.io/\",\n  },\n  {\n    name: \"One Click Dapp\",\n    description: \"Turning smart contracts into easy-to-use dApps\",\n    image: \"ocd\",\n    category: \"Tooling\",\n    address: \"0x9492510BbCB93B6992d8b7Bb67888558E12DCac4\",\n    twitter: \"@pi0neerpat\",\n    URL: \"https://oneclickdapp.com\",\n  },\n  {\n    name: \"rDAO\",\n    description: \"Programmable interest payments for everyone\",\n    image: \"rdai\",\n    category: \"DeFi\",\n    address: \"0x5D7D257d97D8a81F51187a77C6dD226Fb8424d90\",\n    twitter: \"@rDAI_DAO\",\n    URL: \"https://rdai.money\",\n  },\n  {\n    name: \"The Altar of rDAI\",\n    description: \"Making rDAI offerings to open source projects\",\n    image: \"altar\",\n    category: \"DeFi\",\n    address: \"0x607EBb69D568DBe1d2283668120036A892E88e89\",\n    twitter: \"@AltarOfrDAI\",\n    URL: \"https://altarofrdai.io/\",\n  },\n  {\n    name: \"E.TH. Phone Home\",\n    description: \"Voice-calling Ethereum addresses\",\n    image: \"voip\",\n    category: \"Wizardry\",\n    address: \"0x9410A73737E73E105c7CBD57bA64a3073E6A0924\",\n    twitter: \"@ejwessel\",\n    URL: \"https://devpost.com/software/\",\n  },\n  {\n    name: \"threadpool\",\n    description: \"\",\n    image: \"thread\",\n    category: \"Education\",\n    address: \"0x18D80Ffdbd08F70B314f06Ae9D1b309135Af9405\",\n    twitter: \"@threadpool_io\",\n    URL: \"https://devpost.com/software/threadpool\",\n  },\n\n  {\n    name: \"FLiFF\",\n    description: \"The better way to settle up with your friends\",\n    image: \"fliff\",\n    category: \"DeFi\",\n    address: \"0xaFAEfc6dd3C9feF66f92BA838b132644451F0715\",\n    twitter: \"@AppFliff\",\n    URL: \"https://fliff.app/\",\n  },\n  {\n    name: \"Cypherplugs\",\n    description: \"Freedom-enhancing Linux distro for cyber protocols\",\n    image: \"cypher\",\n    category: \"Tooling\",\n    address: \"0x65d676F3Eca501b324A636933Cd3b8c4fB5D9228\",\n    twitter: \"@cypherplugs\",\n    URL: \"https://cypherplugs.com\",\n  },\n  {\n    name: \"Cryptobrawl\",\n    description: \"Interoperable NFT battleground\",\n    image: \"brawl\",\n    category: \"Gaming\",\n    address: \"0x59B96e98B97f3d1A7e59dF53cb0f05E650c4FFfA\",\n    twitter: \"@cryptobrawl\",\n    URL: \"https://cryptobrawl.online\",\n  },\n  {\n    name: \"Blocks of Notes\",\n    description: \"Anonymous suggestion/complaint box with timed release\",\n    image: \"blocks\",\n    category: \"dApp\",\n    address: \"0x74B0A71a430de8022622c8dDFFe3f9EED0876207\",\n    twitter: \"@CuteManhole\",\n    URL: \"https://devpost.com/software/blocksofnotes\",\n  },\n  {\n    name: \"BountyUp\",\n    description: \"Bounties platform sustained by rDAI\",\n    image: \"bounty\",\n    category: \"Bounties\",\n    address: \"0x4a7D077E676C4BF3182ce6dcc09afD3217D88bcD\",\n    twitter: \"@cedriking\",\n    URL: \"https://devpost.com/software/bountyup\",\n  },\n  {\n    name: \"Block Talk\",\n    description: \"E2E encrypted messaging with IPFS storage\",\n    image: \"teens\",\n    category: \"Privacy\",\n    address: \"0x8a68Df0029c9e8B64aD08f9a19a2f8513a4ca70b\",\n    twitter: \"@\",\n    URL: \"https://devpost.com/software/********\",\n  },\n]\n\nexport default PROJECTS\n","import React, { useState, useContext } from \"react\"\nimport { navigate } from \"gatsby\"\nimport styled from \"styled-components\"\nimport SEO from \"../components/seo\"\nimport Layout from \"../components/Layout/Layout\"\nimport ProjectEntity from \"../components/ProjectEntity/ProjectEntity\"\nimport { Context } from \"../components/context\"\n\nimport PROJECTS from \"../components/constants\"\n\nimport \"../components/fonts.css\"\n\nconst Container = styled.section`\n  text-align: center;\n`\n\nconst StyledButton = styled.button`\n  font-family: \"Inter\";\n  font-size: 20px;\n  font-weight: 600;\n  color: #0e0544;\n  text-decoration: none;\n  transition: all 0.2s ease;\n\n  &:hover {\n    transition: border 0.2s ease;\n  }\n\n  &:active {\n    transform: scale(0.97);\n    transition: transform 0.2s ease;\n  }\n`\n\nconst Select = () => {\n  const [state, setState] = useState({\n    selectedCards: [],\n  })\n  const [context, setContext] = useContext(Context)\n  const { tribute, userDetails, compoundRate } = context\n  console.log(context)\n  const isBrowser = typeof window !== \"undefined\"\n  let cRate = 0\n  if (isBrowser) cRate = localStorage.getItem(\"compoundRate\")\n  if (typeof compoundRate !== \"undefined\") cRate = compoundRate\n\n  let daiBalance = 0\n  if (typeof userDetails !== \"undefined\") {\n    daiBalance = userDetails.daiBalance\n  }\n\n  const buyingPower = Math.round(daiBalance * cRate) / 100\n  let cardOffering = \"\"\n  if (state.selectedCards.length > 0)\n    cardOffering = `${Math.round(\n      (buyingPower / state.selectedCards.length) * 100\n    ) / 100}`\n\n  const onToggleSelect = () => name => {\n    const cardsArray = state.selectedCards\n    if (cardsArray.includes(name)) {\n      cardsArray.splice(cardsArray.indexOf(name), 1)\n      setState({ selectedCards: cardsArray })\n      return\n    }\n    cardsArray.push(name)\n    setState({\n      selectedCards: cardsArray,\n    })\n  }\n\n  const submitTribute = () => async () => {\n    // setContext\n    setContext({\n      ...context,\n      selectedCards: state.selectedCards,\n    })\n    console.log(\"setting to context:\", state.selectedCards)\n    // trigger tx\n    const recipients = []\n    const proportions = []\n    PROJECTS.forEach(project => {\n      if (state.selectedCards.includes(project.name)) {\n        recipients.push(project.address)\n        proportions.push(1)\n      }\n    })\n    console.log(recipients)\n    const { tx2 } = await tribute.generateNew(\n      `${daiBalance}`,\n      recipients,\n      proportions\n    )\n    setState({ ...state, isPendingTx: true })\n    await tx2.wait(1)\n\n    // send user to /altar\n    navigate(\"/altar\")\n  }\n\n  const ApproachButton = () => {\n    let buttonText = \"Approach the Altar of rDAI\"\n    if (state.isPendingTx)\n      buttonText = \"The Altar is reviewing your offering...\"\n    return (\n      <StyledButton type=\"button\" onClick={submitTribute()}>\n        {buttonText}\n      </StyledButton>\n    )\n  }\n\n  const ProjectList = () => {\n    const selectedArray = state.selectedCards\n    let list = []\n    list = PROJECTS.map(project => {\n      let isSelected = false\n      if (selectedArray.includes(project.name)) {\n        isSelected = true\n      }\n      return (\n        <ProjectEntity\n          amount={cardOffering}\n          key={`${project.name}`}\n          project={project}\n          isSelected={isSelected}\n          onClick={onToggleSelect()}\n        />\n      )\n    })\n    return list\n  }\n\n  return (\n    <Layout>\n      <Container>\n        <SEO title=\"Select\" />${buyingPower} / year\n        <ProjectList />\n        <ApproachButton />\n      </Container>\n    </Layout>\n  )\n}\n\nexport default Select\n"],"sourceRoot":""}