{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["H1","styled","h1","H2","h2","P","p","StyledLink","Link","Container","section","MainPage","href","to","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"2FAAA,wDAcMA,GAdN,UAcWC,IAAOC,GAAV,gEAAGD,CAAH,gJAWFE,EAAKF,IAAOG,GAAV,gEAAGH,CAAH,+IAWFI,EAAIJ,IAAOK,EAAV,+DAAGL,CAAH,+GASDM,EAAaN,YAAOO,KAAV,wEAAGP,CAAH,2NAkBVQ,EAAYR,IAAOS,QAAV,uEAAGT,CAAH,wBA0DAU,UAtDE,WAoCf,OACE,oCACE,kBAACF,EAAD,KACE,kBAACT,EAAD,0BACA,6BAEA,kBAACG,EAAD,uEACA,6BACA,kBAACE,EAAD,0BACoB,uBAAGO,KAAK,sBAAR,eAEpB,6BACA,kBAACL,EAAD,CAAYM,GAAG,WAAf,e,kCCnHR,iJAcyBC,QAAOC,QAELC,IAAMC,cAAc,K,qBChB/C,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,UALRH,EAAEI,SAAYJ,G,wFCsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGET,IAAMU,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV","file":"component---src-pages-index-js-0d17bb84a49e2072f3bf.js","sourcesContent":["// import React, { useContext } from \"react\"\nimport React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\n// import { ethers } from \"ethers\"\n// import DAIabi from \"../Web3/contracts/dai\"\n// import rDAIabi from \"../Web3/contracts/rdai\"\n\n// import { Context } from \"../components/context\"\nimport \"../components/fonts.css\"\n\n// const { bigNumberify } = ethers.utils\n\nconst H1 = styled.h1`\n  font-family: monospace;\n  font-weight: 900;\n  letter-spacing: -0.2px;\n  font-size: 64px;\n  text-align: center;\n  max-width: 700px;\n  margin: 0 auto;\n  color: #c80303;\n`\n\nconst H2 = styled.h2`\n  font-family: monospace;\n  font-weight: 200;\n  letter-spacing: -0.2px;\n  font-size: 36px;\n  text-align: center;\n  max-width: 900px;\n  margin: 0 auto;\n  color: #c80303;\n`\n\nconst P = styled.p`\n  font-family: monospace;\n  font-size: 24px;\n  max-width: 550px;\n  margin: 15px auto 15px;\n  line-height: 1.3;\n  color: #c80303;\n`\n\nconst StyledLink = styled(Link)`\n  font-family: monospace;\n  font-size: 50px;\n  font-weight: 600;\n  color: #e3e3e3;\n  text-decoration: none;\n  transition: all 0.2s ease;\n\n  &:hover {\n    transition: border 0.2s ease;\n  }\n\n  &:active {\n    transform: scale(0.97);\n    transition: transform 0.2s ease;\n  }\n`\n\nconst Container = styled.section`\n  text-align: center;\n`\n\nconst MainPage = () => {\n  // const [context] = useContext(Context)\n  //\n  // const { txStatus, contracts } = context\n  // let DAIContract\n  // if (typeof contracts !== \"undefined\") {\n  //   DAIContract = contracts.DAIContract\n  // }\n  // console.log(DAIContract)\n\n  // const startGrowing = async level => {\n  //   const levelAmountDai = [10, 100, 500]\n  //\n  //   if (typeof DAIContract !== \"undefined\") {\n  //     DAIContract.approve(\n  //       \"0xea718e4602125407fafcb721b7d760ad9652dfe7\",\n  //       bigNumberify(levelAmountDai[level])\n  //     )\n  //     //   if (isBrowser) {\n  //     //     const { emitter } = notify.hash(tx.hash)\n  //     //\n  //     //     // listen to transaction events\n  //     //     emitter.on(\"txSent\", () => {\n  //     //       console.log(\"txSent\")\n  //     //       setContext({ ...context, txStatus: \"txSent\" })\n  //     //     })\n  //     //     emitter.on(\"txPool\", console.log)\n  //     //     emitter.on(\"txConfirmed\", console.log)\n  //     //     emitter.on(\"txSpeedUp\", console.log)\n  //     //     emitter.on(\"txCancel\", console.log)\n  //     //     emitter.on(\"txFailed\", console.log)\n  //     //     emitter.on(\"all\", console.log)\n  //     //   }\n  //   }\n  // }\n\n  return (\n    <>\n      <Container>\n        <H1>The Altar of rDAI</H1>\n        <br />\n\n        <H2>The Altar presses your idle DAI into serving a greater purpose</H2>\n        <br />\n        <P>\n          More rDAI info at <a href=\"https://rdai.money\">rdai.money</a>\n        </P>\n        <br />\n        <StyledLink to=\"/select\">Proceed</StyledLink>\n      </Container>\n    </>\n  )\n}\n\nexport default MainPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}